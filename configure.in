AC_INIT()
dnl AC_CONFIG_AUX_DIR(config)
AM_INIT_AUTOMAKE(aqsis,0.7.5)
AC_PREFIX_DEFAULT(/usr/local/aqsis)

AC_DEFINE(STRNAME,"Aqsis")


AC_ARG_ENABLE(debug,
[  --enable-debug          compile with debugging [default=no]],
[case "${enableval}" in
  true) debug=true; DEBUG_FLAGS="-g -Wall" ;;
  false) debug=false; DEBUG_FLAGS="" ;;
  yes) debug=true; DEBUG_FLAGS="-g -Wall" ;;
  no)  debug=false; DEBUG_FLAGS="" ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-debug) ;;
esac],
[debug=false; DEBUG_FLAGS=""])
AM_CONDITIONAL(DEBUG, test x$debug = xtrue)

AC_ARG_ENABLE(plugins,
[  --enable-plugins        compile with plugin support [default=yes, requires shared lib support]],
[case "${enableval}" in
  true) plugins=true; PLUGIN_FLAGS="-ldl"; AC_DEFINE(PLUGINS) ;;
  false) plugins=false; PLUGIN_FLAGS="" ;;
  yes) plugins=true; PLUGIN_FLAGS="-ldl"; AC_DEFINE(PLUGINS) ;;
  no) plugins=false; PLUGIN_FLAGS="" ;;
  *) AC_MSG_ERROR(bad value ${enableval} for --enable-plugins) ;;
esac],
[plugins=true; PLUGIN_FLAGS="-ldl"; AC_DEFINE(PLUGINS)])
AM_CONDITIONAL(PLUGINS, test x$plugins = xtrue)
AC_SUBST(PLUGIN_FLAGS)

AC_PROG_CXX
AM_ENABLE_SHARED
AC_DISABLE_STATIC
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_PROG_YACC
AC_EXEEXT

dnl Needed by librib2/bdec.cpp. Define WORDS_BIGENDIAN.
AC_C_BIGENDIAN

dnl Check for OpenGL and glut
MDL_HAVE_OPENGL
AM_CONDITIONAL(OPENGL, test x$have_glut = xyes)
if test x$have_glut = xno ; then
	AC_MSG_WARN([*** Could not find GLUT, glut based framebuffer devices will not be built ***]);
fi

dnl Log4CPP for loggging support
AC_LANG_SAVE
AC_LANG(C++)
AM_PATH_LOG4CPP
AC_LANG_RESTORE
if test -z "$LOG4CPP_LIBS" ; then
	AC_MSG_ERROR([*** Could not find Log4cpp, check it is installed, with headers, and try again ***]);
fi

dnl TIFF library
saveCFLAGS=$CFLAGS
HAVE_LIBTIFF
CFLAGS=$TIFF_INC
AC_CHECK_HEADER(tiff.h)
CFLAGS=$saveCFLAGS
if test ! "$ac_cv_header_tiff_h" ; then
        AC_MSG_ERROR([*** Cannot find tiff.h, please ensure you have libtiff installed ***]);
fi

dnl ArgParse
AC_LANG_SAVE
AC_LANG(C++)
saveCXXFLAGS=$CXXFLAGS
HAVE_LIBARGPARSE
CFLAGS=$ARGPARSE_INC
AC_CHECK_HEADER(argparse.h)
AC_LANG_RESTORE
CXXFLAGS=$saveCXXFLAGS
if test ! "$ac_cv_header_argparse_h" ; then
        AC_MSG_ERROR([*** Cannot find argparse.h, please ensure you have libargparse installed ***]);
fi

CPPFLAGS="$CPPFLAGS -DBASE_PATH=\\\"\"$datadir\\\"\" -DCONFIG_PATH=\\\"\"$sysconfdir\\\"\""
AM_CXXFLAGS="-O2 $DEBUG_FLAGS"

AC_OUTPUT( \
all/Makefile \
aqsis/Makefile \
aqsl/Makefile \
aqsl/tests/Makefile \
filebuffer/Makefile \
framebuffer_glut/Makefile \
framebuffer_glut_z/Makefile \
images/Makefile \
libaqsistypes/Makefile \
libaqsistypes/posix/Makefile \
libaqsistypes/win32/Makefile \
libaqsistypes/win32/intel/Makefile \
libcodegenvm/Makefile \
libdd/Makefile \
libddmsimple/Makefile \
libddmsock/Makefile \
libri2rib/Makefile \
librib2/Makefile \
librib2/tests/Makefile \
librib2ri/Makefile \
librib2stream/Makefile \
libslparse/Makefile \
render/Makefile \
render/macosx/Makefile \
render/macosx/std/Makefile \
ribfiles/Makefile \
shaders/Makefile \
shadowmap/Makefile \
slpp/Makefile \
teqser/Makefile \
aqsltell/Makefile \
plugins/Makefile \
plugins/common/Makefile \
plugins/gif2tif/Makefile \
plugins/jpg2tif/Makefile \
plugins/ppm2tif/Makefile \
plugins/pcx2tif/Makefile \
plugins/tga2tif/Makefile \
plugins/bake2tif/Makefile \
releasearchive/Makefile \
libslxargs/Makefile \
libshadervm/Makefile \
libshaderexecenv/Makefile \
Makefile )

