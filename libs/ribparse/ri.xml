<?xml version="1.0"?>
<RiAPI>
	<!-- ====================================================================== -->
	<Procedures>

		<Section>Relationship to the RenderMan Shading Language</Section>

		<Procedure>
			<Name>Declare</Name>
			<ReturnType>RtToken</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>declaration</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<Outside/>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Section>Graphics State</Section>

		<Procedure>
			<Name>Begin</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<ValidScope>
				<Outside/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>End</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments/>
			<ValidScope>
				<BeginEnd/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>GetContext</Name>
			<ReturnType>RtContextHandle</ReturnType>
			<NoCache/>
			<Arguments/>
		</Procedure>

		<Procedure>
			<Name>Context</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>handle</Name>
					<Type>RtContextHandle</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>FrameBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>number</Name>
					<Type>RtInt</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>FrameEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>WorldBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>WorldEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<World/>
			</ValidScope>
		</Procedure>

		<SubSection>Conditional RIB</SubSection>

		<Procedure>
			<Name>IfBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>condition</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>ElseIf</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>condition</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>Else</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
			</Arguments>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>IfEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
			</Arguments>
			<Rib/>
		</Procedure>


		<SubSection>Options</SubSection>
		<SubSubSection>Camera</SubSubSection>

		<Procedure>
			<Name>Format</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>xresolution</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>yresolution</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>pixelaspectratio</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>FrameAspectRatio</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>frameratio</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ScreenWindow</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>left</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>right</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>bottom</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>top</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>CropWindow</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>xmin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ymin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ymax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Projection</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Clipping</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>cnear</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>cfar</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ClippingPlane</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>z</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>nx</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ny</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>nz</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>DepthOfField</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>fstop</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>focallength</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>focaldistance</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Shutter</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>opentime</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>closetime</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Displays</SubSubSection>

		<Procedure>
			<Name>PixelVariance</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>variance</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>PixelSamples</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>xsamples</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ysamples</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>PixelFilter</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>function</Name>
					<Type>RtFilterFunc</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Exposure</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>gain</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>gamma</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Imager</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Quantize</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>one</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>min</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>max</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>ditheramplitude</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Display</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>mode</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>GaussianFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>BoxFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>MitchellFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>TriangleFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>CatmullRomFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>SincFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>DiskFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>BesselFilter</Name>
			<ReturnType>RtFloat</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>x</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>y</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>xwidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>ywidth</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<SubSubSection>Additional options</SubSubSection>

		<Procedure>
			<Name>Hider</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ColorSamples</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>N</Name>
					<Type>RtInt</Type>
					<RibValue>nRGB.size()/3</RibValue>
				</Argument>
				<Argument>
					<Name>nRGB</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __nRGB_length = N;
</Length>
				</Argument>
				<Argument>
					<Name>RGBn</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __RGBn_length = N;
</Length>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>RelativeDetail</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>relativedetail</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Implementation-specific options</SubSubSection>

		<Procedure>
			<Name>Option</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSection>Attributes</SubSection>

		<Procedure>
			<Name>AttributeBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>AttributeEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Attribute/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Color and opacity</SubSubSection>

		<Procedure>
			<Name>Color</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>Cq</Name>
					<Type>RtColor</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Opacity</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>Os</Name>
					<Type>RtColor</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Texture coordinates</SubSubSection>

		<Procedure>
			<Name>TextureCoordinates</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>s1</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>t1</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>s2</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>t2</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>s3</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>t3</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>s4</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>t4</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Light sources</SubSubSection>

		<Procedure>
			<Name>LightSource</Name>
			<ReturnType>RtLightHandle</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>AreaLightSource</Name>
			<ReturnType>RtLightHandle</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Illuminate</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>light</Name>
					<Type>RtLightHandle</Type>
				</Argument>
				<Argument>
					<Name>onoff</Name>
					<Type>RtBoolean</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Surface shading</SubSubSection>

		<Procedure>
			<Name>Surface</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Displacement shading</SubSubSection>
		<Procedure>
			<Name>Deformation</Name>
			<Deprecated/>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Displacement</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Volume shading</SubSubSection>
		<Procedure>
			<Name>Atmosphere</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Interior</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Exterior</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Layered Shaders</SubSubSection>

		<Procedure>
			<Name>ShaderLayer</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>layername</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ConnectShaderLayers</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>layer1</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>variable1</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>layer2</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>variable2</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
		</Procedure>


		<SubSubSection>Shading rate</SubSubSection>

		<Procedure>
			<Name>ShadingRate</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>size</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Shading interpolation</SubSubSection>

		<Procedure>
			<Name>ShadingInterpolation</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Matte objects</SubSubSection>

		<Procedure>
			<Name>Matte</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>onoff</Name>
					<Type>RtBoolean</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Bound</SubSubSection>

		<Procedure>
			<Name>Bound</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>bound</Name>
					<Type>RtBound</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Detail</SubSubSection>

		<Procedure>
			<Name>Detail</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>bound</Name>
					<Type>RtBound</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>DetailRange</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>offlow</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>onlow</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>onhigh</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>offhigh</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Geometric approximation</SubSubSection>

		<Procedure>
			<Name>GeometricApproximation</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>value</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Orientation and sides</SubSubSection>

		<Procedure>
			<Name>Orientation</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>orientation</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ReverseOrientation</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Sides</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nsides</Name>
					<Type>RtInt</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Transformations</SubSection>

		<Procedure>
			<Name>Identity</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Transform</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>transform</Name>
					<Type>RtMatrix</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ConcatTransform</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>transform</Name>
					<Type>RtMatrix</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Perspective</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>fov</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Translate</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>dx</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dy</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dz</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Rotate</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>angle</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dx</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dy</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dz</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Scale</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>sx</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>sy</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>sz</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Skew</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>angle</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dx1</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dy1</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dz1</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dx2</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dy2</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>dz2</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Named coordinate systems</SubSubSection>
		<Procedure>
			<Name>CoordinateSystem</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>space</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>CoordSysTransform</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>space</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>TransformPoints</Name>
			<ReturnType>RtPoint*</ReturnType>
			<Arguments>
				<Argument>
					<Name>fromspace</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>tospace</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>npoints</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>points</Name>
					<Type>RtPointArray</Type>
				
					<Length>		int __points_length = npoints;
</Length>
				</Argument>
			</Arguments>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Transformation stack</SubSubSection>
		<Procedure>
			<Name>TransformBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>TransformEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Transform/>
			</ValidScope>
		</Procedure>

		<SubSection>Resources</SubSection>

		<Procedure>
			<Name>Resource</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>handle</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>	
				<ParamList/>
			</Arguments>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>ResourceBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
		</Procedure>

		<Procedure>
			<Name>ResourceEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
		</Procedure>

		<SubSection>Implementation-specific Attributes</SubSection>

		<Procedure>
			<Name>Attribute</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Section>Geometric Primitives</Section>
		<SubSection>Polygons</SubSection>

		<Procedure>
			<Name>Polygon</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nvertices</Name>
					<Type>RtInt</Type>
					<RibValue>paramList.countP()</RibValue>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = nvertices;
</VaryingSize>
			<VertexSize>		vertex_size = nvertices;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = nvertices;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>GeneralPolygon</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nloops</Name>
					<Type>RtInt</Type>
					<RibValue>nverts.size()</RibValue>
				</Argument>
				<Argument>
					<Name>nverts</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nverts_length = nloops;
</Length>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 0;
		{
			int __i;
			for(__i=0;__i&lt;nloops;__i++)
				varying_size+=nverts[__i];
		}
</VaryingSize>
			<VertexSize>		vertex_size = varying_size;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = varying_size;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>PointsPolygons</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>npolys</Name>
					<Type>RtInt</Type>
					<RibValue>nverts.size()</RibValue>
				</Argument>
				<Argument>
					<Name>nverts</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nverts_length = npolys;
</Length>
				</Argument>
				<Argument>
					<Name>verts</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __verts_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;npolys; __i++)
				__verts_length+=nverts[__i];
		}
</Length>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;__verts_length; __i++)
				if(verts[__i]&gt;varying_size)
					varying_size=verts[__i];
		}
		varying_size+=1;
</VaryingSize>
			<VertexSize>		vertex_size=varying_size;
</VertexSize>
			<FaceVaryingSize>		facevarying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;npolys; __i++)
				facevarying_size+=nverts[__i];
		}
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>PointsGeneralPolygons</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>npolys</Name>
					<Type>RtInt</Type>
					<RibValue>nloops.size()</RibValue>
				</Argument>
				<Argument>
					<Name>nloops</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nloops_length = npolys;
</Length>
				</Argument>
				<Argument>
					<Name>nverts</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nverts_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;npolys; __i++)
				__nverts_length+=nloops[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>verts</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __verts_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;__nverts_length; __i++)
				__verts_length+=nverts[__i];
		}
</Length>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;__verts_length; __i++)
				if(verts[__i]&gt;varying_size)
					varying_size=verts[__i];
		}
		varying_size+=1;
</VaryingSize>
			<VertexSize>		vertex_size=varying_size;
</VertexSize>
			<FaceVaryingSize>		facevarying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;npolys; __i++)
				facevarying_size+=nverts[__i];
		}
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Patches</SubSection>

		<Procedure>
			<Name>Basis</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>ubasis</Name>
					<Type>RtBasis</Type>
				</Argument>
				<Argument>
					<Name>ustep</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>vbasis</Name>
					<Type>RtBasis</Type>
				</Argument>
				<Argument>
					<Name>vstep</Name>
					<Type>RtInt</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Patch</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
		if(strcmp(type, "bicubic")==0)
			vertex_size=16;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = varying_size;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>PatchMesh</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>nu</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>uwrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>nv</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>vwrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<UniformSize>
		if(strcmp(type, "bilinear")==0)
		{
			if(strcmp(uwrap, "periodic")==0)
				uniform_size = nu;
			else
				uniform_size = nu-1;
			if(strcmp(vwrap, "periodic")==0)
				uniform_size *= nv;
			else
				uniform_size *= nv-1;
		}
		else
		{
			int ustep = QGetRenderContext() -&gt;pattrCurrent()-&gt;GetIntegerAttribute( "System", "BasisStep" ) [ 0 ];
			int vstep = QGetRenderContext() -&gt;pattrCurrent()-&gt;GetIntegerAttribute( "System", "BasisStep" ) [ 1 ];
			if(strcmp(uwrap, "periodic")==0)
				uniform_size = nu/ustep;
			else
				uniform_size = (nu-4)/ustep;
			if(strcmp(vwrap, "periodic")==0)
				uniform_size *= nv/vstep;
			else
				uniform_size *= (nv-4)/vstep;
		}
</UniformSize>
			<VaryingSize>
		if(strcmp(type, "bilinear")==0)
			varying_size = nu*nv;
		else
		{
			int ustep = QGetRenderContext() -&gt;pattrCurrent()-&gt;GetIntegerAttribute( "System", "BasisStep" ) [ 0 ];
			int vstep = QGetRenderContext() -&gt;pattrCurrent()-&gt;GetIntegerAttribute( "System", "BasisStep" ) [ 1 ];
			varying_size = (nu/ustep)*(nv/vstep);
		}
</VaryingSize>
			<VertexSize>		vertex_size=nu*nv;
</VertexSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>NuPatch</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nu</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>uorder</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>uknot</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __uknot_length = nu + uorder;
</Length>
				</Argument>
				<Argument>
					<Name>umin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>umax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>nv</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>vorder</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>vknot</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __vknot_length = nv + vorder;
</Length>
				</Argument>
				<Argument>
					<Name>vmin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>vmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<UniformSize>		uniform_size=(1+nu-uorder+1)*(1+nv-vorder+1);
</UniformSize>
			<VaryingSize>		varying_size=(1+nu-uorder+1)*(1+nv-vorder+1);
</VaryingSize>
			<VertexSize>		vertex_size=nu*nv;
</VertexSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>TrimCurve</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nloops</Name>
					<Type>RtInt</Type>
					<RibValue>ncurves.size()</RibValue>
				</Argument>
				<Argument>
					<Name>ncurves</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __ncurves_length = nloops;
</Length>
				</Argument>
				<Argument>
					<Name>order</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __order_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;nloops; __i++)
				__order_length+=ncurves[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>knot</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __knot_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;__order_length; __i++)
				__knot_length+=order[__i]+n[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>min</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __min_length = __order_length;
</Length>
				</Argument>
				<Argument>
					<Name>max</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __max_length = __order_length;
</Length>
				</Argument>
				<Argument>
					<Name>n</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __n_length = __order_length;
</Length>
				</Argument>
				<Argument>
					<Name>u</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __u_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;__order_length; __i++)
				__u_length+=n[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>v</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __v_length = __u_length;
</Length>
				</Argument>
				<Argument>
					<Name>w</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __w_length = __u_length;
</Length>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Subdivision Surfaces</SubSection>

		<Procedure>
			<Name>SubdivisionMesh</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>scheme</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>nfaces</Name>
					<Type>RtInt</Type>
					<RibValue>nvertices.size()</RibValue>
				</Argument>
				<Argument>
					<Name>nvertices</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nvertices_length = nfaces;
</Length>
				</Argument>
				<Argument>
					<Name>vertices</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __vertices_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;nfaces; __i++)
				__vertices_length+=nvertices[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>ntags</Name>
					<Type>RtInt</Type>
					<RibValue>tags.size()</RibValue>
				</Argument>
				<Argument>
					<Name>tags</Name>
					<Type>RtTokenArray</Type>
				
					<Length>		int __tags_length = ntags;</Length>
				</Argument>
				<Argument>
					<Name>nargs</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nargs_length = ntags*2;
</Length>
				</Argument>
				<Argument>
					<Name>intargs</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __intargs_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;ntags*2; __i+=2)
				__intargs_length+=nargs[__i];
		}
</Length>
				</Argument>
				<Argument>
					<Name>floatargs</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __floatargs_length = 0;
		{
			int __i;
			for(__i=0; __i&lt;ntags*2; __i+=2)
				__floatargs_length+=nargs[__i+1];
		}
</Length>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;__vertices_length; __i++)
				if(vertices[__i]&gt;varying_size)
					varying_size=vertices[__i];
		}
		varying_size+=1;
</VaryingSize>
			<VertexSize>		vertex_size=varying_size;
</VertexSize>
			<FaceVaryingSize>		facevarying_size=0;
		{
			int __i;
			for(__i=0; __i&lt;nfaces; __i++)
				facevarying_size+=nvertices[__i];
		}
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Quadrics</SubSection>

		<Procedure>
			<Name>Sphere</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>radius</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Cone</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>height</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>radius</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Cylinder</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>radius</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Hyperboloid</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>point1</Name>
					<Type>RtPoint</Type>
				</Argument>
				<Argument>
					<Name>point2</Name>
					<Type>RtPoint</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Paraboloid</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>rmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>zmax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Disk</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>height</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>radius</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Torus</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>majorrad</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>minorrad</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>phimin</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>phimax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>thetamax</Name>
					<Type>RtFloat</Type>
				</Argument>
				<RibArgsCanBeArray/>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = 4;
</VaryingSize>
			<VertexSize>		vertex_size = 4;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = 4;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Points and Curve Primitives</SubSection>

		<Procedure>
			<Name>Points</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>npoints</Name>
					<Type>RtInt</Type>
					<RibValue>paramList.countP()</RibValue>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<VaryingSize>		varying_size = npoints;
</VaryingSize>
			<VertexSize>		vertex_size = npoints;
</VertexSize>
			<FaceVaryingSize>		facevarying_size = npoints;
</FaceVaryingSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>Curves</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>ncurves</Name>
					<Type>RtInt</Type>
					<RibValue>nvertices.size()</RibValue>
				</Argument>
				<Argument>
					<Name>nvertices</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __nvertices_length = ncurves;
</Length>
				</Argument>
				<Argument>
					<Name>wrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<UniformSize>		uniform_size = ncurves;
</UniformSize>
			<VaryingSize>		varying_size = 0;
		{
			int __i;
			for(__i=0; __i&lt;__nvertices_length; __i++)
			{
				if(strcmp(type, "cubic")==0)
				{
					int step = QGetRenderContext() -&gt;pattrCurrent()-&gt;GetIntegerAttribute( "System", "BasisStep" ) [ 0 ];
					if(strcmp(wrap, "periodic")==0)
						varying_size+=nvertices[__i]/step;
					else
						varying_size+=((nvertices[__i]-4)/step)+1;
				}
				else
				{
					if(strcmp(wrap, "periodic")==0)
						varying_size+=nvertices[__i];
					else
						varying_size+=nvertices[__i]-1;
				}
				varying_size+=1;
			}
		}
</VaryingSize>
			<VertexSize>		vertex_size = 0;
		{
			int __i;
			for(__i=0; __i&lt;ncurves; __i++)
				vertex_size+=nvertices[__i];
		}
</VertexSize>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Blobby Implicit Surfaces</SubSection>

		<Procedure>
			<Name>Blobby</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>nleaf</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>ncode</Name>
					<Type>RtInt</Type>
					<RibValue>code.size()</RibValue>
				</Argument>
				<Argument>
					<Name>code</Name>
					<Type>RtIntArray</Type>
				
					<Length>		int __code_length = ncode;
</Length>
				</Argument>
				<Argument>
					<Name>nflt</Name>
					<Type>RtInt</Type>
					<RibValue>flt.size()</RibValue>
				</Argument>
				<Argument>
					<Name>flt</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __flt_length = nflt;
</Length>
				</Argument>
				<Argument>
					<Name>nstr</Name>
					<Type>RtInt</Type>
					<RibValue>str.size()</RibValue>
				</Argument>
				<Argument>
					<Name>str</Name>
					<Type>RtTokenArray</Type>
				
					<Length>		int __str_length = nstr;
</Length>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<SubSection>Procedural Primitives</SubSection>

		<Procedure>
			<Name>Procedural</Name>
			<ReturnType>RtVoid</ReturnType>
			<RibSpecial/>
			<Arguments>
				<Argument>
					<Name>data</Name>
					<Type>RtPointer</Type>
				</Argument>
				<Argument>
					<Name>bound</Name>
					<Type>RtBound</Type>
				</Argument>
				<Argument>
					<Name>refineproc</Name>
					<Type>RtProcSubdivFunc</Type>
				</Argument>
				<Argument>
					<Name>freeproc</Name>
					<Type>RtProcFreeFunc</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ProcFree</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>data</Name>
					<Type>RtPointer</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ProcDelayedReadArchive</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>data</Name>
					<Type>RtPointer</Type>
				</Argument>
				<Argument>
					<Name>detail</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ProcRunProgram</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>data</Name>
					<Type>RtPointer</Type>
				</Argument>
				<Argument>
					<Name>detail</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ProcDynamicLoad</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>data</Name>
					<Type>RtPointer</Type>
				</Argument>
				<Argument>
					<Name>detail</Name>
					<Type>RtFloat</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<SubSection>Implementation-specific Geometric Primitives</SubSection>

		<Procedure>
			<Name>Geometry</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<SubSection>Soids and Spatial Set Operations</SubSection>

		<Procedure>
			<Name>SolidBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>SolidEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Solid/>
			</ValidScope>
		</Procedure>

		<SubSection>Retained Geometry</SubSection>

		<Procedure>
			<Name>ObjectBegin</Name>
			<ReturnType>RtObjectHandle</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ObjectEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ObjectInstance</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>handle</Name>
					<Type>RtObjectHandle</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Section>Motion</Section>

		<!--
		This one is so odd that we leave it out for now.
		<Procedure>
			<Name>MotionBegin</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>N</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>...</Name>
					<Type/>
				</Argument>
			</Arguments>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>
		-->

		<Procedure>
			<Name>MotionBegin</Name>
			<CName>MotionBeginV</CName>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>N</Name>
					<Type>RtInt</Type>
					<RibValue>times.size()</RibValue>
				</Argument>
				<Argument>
					<Name>times</Name>
					<Type>RtFloatArray</Type>
				
					<Length>		int __times_length = N;
</Length>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>MotionEnd</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments/>
			<Rib/>
			<ValidScope>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Section>External Resources</Section>
		<SubSection>Texture Map Utilities</SubSection>
		<SubSubSection>Making texture maps</SubSubSection>

		<Procedure>
			<Name>MakeTexture</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>imagefile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>texturefile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>swrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>twrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>filterfunc</Name>
					<Type>RtFilterFunc</Type>
				</Argument>
				<Argument>
					<Name>swidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>twidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>MakeBump</Name>
			<ReturnType>RtVoid</ReturnType>
			<Deprecated/>
			<Arguments>
				<Argument>
					<Name>imagefile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>bumpfile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>swrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>twrap</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>filterfunc</Name>
					<Type>RtFilterFunc</Type>
				</Argument>
				<Argument>
					<Name>swidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>twidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Making environment maps</SubSubSection>
		<Procedure>
			<Name>MakeLatLongEnvironment</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>imagefile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>reflfile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>filterfunc</Name>
					<Type>RtFilterFunc</Type>
				</Argument>
				<Argument>
					<Name>swidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>twidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>MakeCubeFaceEnvironment</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>px</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>nx</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>py</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>ny</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>pz</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>nz</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>reflfile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>fov</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>filterfunc</Name>
					<Type>RtFilterFunc</Type>
				</Argument>
				<Argument>
					<Name>swidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<Argument>
					<Name>twidth</Name>
					<Type>RtFloat</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSubSection>Making shadow maps</SubSubSection>
		<Procedure>
			<Name>MakeShadow</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>picfile</Name>
					<Type>RtString</Type>
				</Argument>
				<Argument>
					<Name>shadowfile</Name>
					<Type>RtString</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>MakeOcclusion</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>npics</Name>
					<Type>RtInt</Type>
					<RibValue>picfiles.size()</RibValue>
				</Argument>
				<Argument>
					<Name>picfiles</Name>
					<Type>RtStringArray</Type>
				
					<Length>		int __picfiles_length = npics;
</Length>
				</Argument>
				<Argument>
					<Name>shadowfile</Name>
					<Type>RtString</Type>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
			<ValidScope>
				<BeginEnd/>
				<Frame/>
			</ValidScope>
		</Procedure>

		<SubSection>Errors</SubSection>

		<Procedure>
			<Name>ErrorHandler</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>handler</Name>
					<Type>RtErrorFunc</Type>
				</Argument>
			</Arguments>
			<Rib/>
			<ValidScope>
				<Outside/>
				<BeginEnd/>
				<Frame/>
				<World/>
				<Attribute/>
				<Transform/>
				<Solid/>
				<Object/>
				<Motion/>
			</ValidScope>
		</Procedure>

		<Procedure>
			<Name>ErrorIgnore</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>code</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>severity</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>message</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ErrorPrint</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>code</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>severity</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>message</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ErrorAbort</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>code</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>severity</Name>
					<Type>RtInt</Type>
				</Argument>
				<Argument>
					<Name>message</Name>
					<Type>RtString</Type>
				</Argument>
			</Arguments>
		</Procedure>

		<SubSection>Archive Files</SubSection>

		<Procedure>
			<Name>ArchiveRecord</Name>
			<ReturnType>RtVoid</ReturnType>
			<NoCache/>
			<Arguments>
				<Argument>
					<Name>type</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>format</Name>
					<Type>char *</Type>
				</Argument>
				<Argument>
					<Name>...</Name>
					<Type/>
				</Argument>
			</Arguments>
		</Procedure>

		<Procedure>
			<Name>ReadArchive</Name>
			<ReturnType>RtVoid</ReturnType>
			<Arguments>
				<Argument>
					<Name>name</Name>
					<Type>RtToken</Type>
				</Argument>
				<Argument>
					<Name>callback</Name>
					<Type>RtArchiveCallback</Type>
					<RibValue>RiArchiveRecord</RibValue>
				</Argument>
				<ParamList/>
			</Arguments>
			<Rib/>
		</Procedure>

	</Procedures>
</RiAPI>
